buildscript {
    repositories {
    	jcenter()
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'

version = modVersion 
group = modGroup // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = modBaseName 

compileJava {
	sourceCompatibility = 1.8
    targetCompatibility = 1.8
}


minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    
    mappings channel: 'snapshot', version: '20171003-1.12'
    
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    


    
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    
    /*
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }


    }*/
}


repositories {
	mavenCentral()
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

}
processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

jar.finalizedBy('reobfJar') 



jar {
 manifest {
        attributes([
            "FMLCorePlugin": corePlugin,
            "FMLCorePluginContainsFMLMod": 'true'
        ])
    }
//    manifest {
  //      attributes 'FMLCorePluginContainsFMLMod': 'true'
    //}
}
